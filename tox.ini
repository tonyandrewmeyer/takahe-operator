[tox]
requires =
    tox>=4.2
env_list =
    static
    lint
    unit
    scenario
no_package = true
skip_missing_interpreters = true

[testenv]
pass_env =
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    PYTHONPATH
set_env =
    PYTHONBREAKPOINT = pdb.set_trace
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PY_COLORS = 1

[testenv:static]
description = Run static type checks
deps =
    -r {tox_root}/requirements.txt
    pyright
commands =
    pyright {posargs}

[testenv:lint]
description = Check code against coding style standards
deps =
    codespell
    ruff
commands =
    codespell {tox_root}
    ruff {[vars]all_path}
    ruff format {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    -r {tox_root}/requirements.txt
    coverage[toml]
    pytest
commands =
    coverage run --source={[vars]src_path} \
      -m pytest \
      --tb native \
      -v \
      -s \
      {posargs} \
      {[vars]tests_path}/unit
    coverage report

[testenv:scenario]
description = Run scenario tests
deps =
    -r {tox_root}/requirements.txt
    coverage[toml]
    ops-scenario
    pytest
commands =
    coverage run --source={[vars]src_path} \
      -m pytest \
      --tb native \
      -v \
      -s \
      {posargs} \
      {[vars]tests_path}/scenario
    coverage report

[testenv:format]
description = Apply coding style standards to code
deps =
    ruff
commands =
    ruff --fix {[vars]all_path}
    ruff format {[vars]all_path}

[testenv:integration]
description = Run integration tests
deps =
    -r {tox_root}/requirements.txt
    juju
    pytest
    pytest-operator
commands =
    pytest -v \
      -s \
      --tb native \
      --log-cli-level=INFO \
      {posargs} \
      {[vars]tests_path}/integration

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}
